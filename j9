//function
 function greet(){//hoist function expression
     console.log('hllo');
 }
 const speak=function(){//doesn't hoist function expression
   console.log('good-day');  
 };
 greet();
 speak();

 const speak1=function(name='ko',time='kk'){//doesn't hoist function expression
    console.log(`good day ${name} ${time}`);  
  };
  speak1();
  speak1('mr','morning');//mr-arguement, name=parameter
  
const calcArea=function(radiu){
   return 3.14*radiu**2;
};
const area=calcArea(5);
console.log(area);

const calcVol=function(area){
   
};
calcVol(area);

const calcArea1=radiu=>3.14*radiu**2;//for 1-no par,for 2-par,for nothing-par
const an=calcArea1(5);
console.log(an);

const greet2=()=>'Hello';
const f=greet2;
console.log(f);

const bill=(products,tax)=>{
    let total=0;
    for(let p=0;p<products.length;p++){
        total+=products[p]+products[p]*tax;
    }
    return total;
};
console.log(bill([10,15,30],0.2));

const jj='shaun';
const gt1=()=>'hi';
let result1=gt1();
console.log(result1);

//methods
let result2=jj.toUpperCase();
console.log(result2);

//callbacks & foreach
const myFunc=(callbackFunc)=>{
  let value=50;
  callbackFunc(value);
};
myFunc(value=>{
    console.log(value);
});

let people=['m','l','r','s','c'];
people.forEach((person,index)=>{
    console.log(index,person);
});


const logperson=(person,index)=>{
    console.log(`${index}-hello ${person}`);
  };
people.forEach(logperson);
